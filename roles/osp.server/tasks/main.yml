---
# - name: remove an instance
#   os_server:
#     name: frontend
#     state: absent
# - name: remove an instance
#   os_server:
#     name: db
#     state: absent

- name: Create new server instances and attaches them a network and passes metadata to the instance
  os_server:
    cloud: ospcloud
    name: "{{ item.0.name }}"
    image: "{{ item.0.image }}"
    key_name: "{{ item.0.key_name }}"
    flavor: "{{ item.0.flavor }}"
    security_groups: "{{ item.0.security_group }}"
    nics:
      - net-name: int_network
    meta: "{{ item.1 }}"
    userdata: |
      #!/bin/bash
      curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub
      cat /tmp/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
      curl -o /tmp/internal.repo http://www.opentlc.com/download/ansible_bootcamp/repo/internal.repo
      cp /tmp/internal.repo /etc/yum.repos.d/internal.repo
  tags:
    - what
  register: instanceip
  with_subelements:
    - "{{osp_servers}}"
    - meta
# - name: wtf
#   debug: 
#     var: item.value.name
#   with_dict: "{{osp_servers}}"

# - pause:

- name: Add floating IP to Servers
  os_floating_ip:
    cloud: ospcloud
    state: present
    reuse: yes
    server: "{{ item.value.name }}"
    network: ext_network
    wait: true
    timeout: 180
  register: instancefloatingip
  with_dict: "{{osp_servers}}"

- name: Fetch Instance Info
  os_server_facts:
    cloud: ospcloud
    region_name: RegionOne
  register: r_os_servers

- name: Add host
  add_host:
    name: "{{ item.public_v4 }}"
    group:
      - "{{ item.metadata.group }}"
      - "{{ item.metadata.deployment_name }}"
  loop: "{{ r_os_servers.ansible_facts.openstack_servers }}"
   
# - name: Show "{{ instanceip }}" public IP
#   debug: 
#     var:
#       instancefloatingip.floating_ip.floating_ip_address

# - name: Wait for "{{ instance_name }}" to be available
#   wait_for:
#     host: "{{ instancefloatingip.floating_ip.floating_ip_address }}"
#     port: 22
#     search_regex: OpenSSH
#     timeout: 600
#   delegate_to: "{{ inventory_hostname }}"